/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignOutImport } from './routes/(auth)/sign-out'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedDocumentsIndexImport } from './routes/_authenticated/documents/index'
import { Route as AuthenticatedAttachmentsIndexImport } from './routes/_authenticated/attachments/index'
import { Route as AuthenticatedAppsIndexImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedTasksCreateImport } from './routes/_authenticated/tasks/create'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedDocumentsCreateImport } from './routes/_authenticated/documents/create'
import { Route as AuthenticatedAttachmentsSharedWithMeImport } from './routes/_authenticated/attachments/shared-with-me'
import { Route as AuthenticatedTasksTaskIdIndexImport } from './routes/_authenticated/tasks/$task-id/index'
import { Route as AuthenticatedDocumentsDocumentIdIndexImport } from './routes/_authenticated/documents/$document-id/index'
import { Route as AuthenticatedTasksTaskIdEditImport } from './routes/_authenticated/tasks/$task-id/edit'
import { Route as AuthenticatedDocumentsDocumentIdEditImport } from './routes/_authenticated/documents/$document-id/edit'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignOutRoute = authSignOutImport.update({
  id: '/(auth)/sign-out',
  path: '/sign-out',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDocumentsIndexRoute =
  AuthenticatedDocumentsIndexImport.update({
    id: '/documents/',
    path: '/documents/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAttachmentsIndexRoute =
  AuthenticatedAttachmentsIndexImport.update({
    id: '/attachments/',
    path: '/attachments/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTasksCreateRoute = AuthenticatedTasksCreateImport.update({
  id: '/tasks/create',
  path: '/tasks/create',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedDocumentsCreateRoute =
  AuthenticatedDocumentsCreateImport.update({
    id: '/documents/create',
    path: '/documents/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAttachmentsSharedWithMeRoute =
  AuthenticatedAttachmentsSharedWithMeImport.update({
    id: '/attachments/shared-with-me',
    path: '/attachments/shared-with-me',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedTasksTaskIdIndexRoute =
  AuthenticatedTasksTaskIdIndexImport.update({
    id: '/tasks/$task-id/',
    path: '/tasks/$task-id/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDocumentsDocumentIdIndexRoute =
  AuthenticatedDocumentsDocumentIdIndexImport.update({
    id: '/documents/$document-id/',
    path: '/documents/$document-id/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedTasksTaskIdEditRoute =
  AuthenticatedTasksTaskIdEditImport.update({
    id: '/tasks/$task-id/edit',
    path: '/tasks/$task-id/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDocumentsDocumentIdEditRoute =
  AuthenticatedDocumentsDocumentIdEditImport.update({
    id: '/documents/$document-id/edit',
    path: '/documents/$document-id/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-out': {
      id: '/(auth)/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof authSignOutImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/attachments/shared-with-me': {
      id: '/_authenticated/attachments/shared-with-me'
      path: '/attachments/shared-with-me'
      fullPath: '/attachments/shared-with-me'
      preLoaderRoute: typeof AuthenticatedAttachmentsSharedWithMeImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/documents/create': {
      id: '/_authenticated/documents/create'
      path: '/documents/create'
      fullPath: '/documents/create'
      preLoaderRoute: typeof AuthenticatedDocumentsCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tasks/create': {
      id: '/_authenticated/tasks/create'
      path: '/tasks/create'
      fullPath: '/tasks/create'
      preLoaderRoute: typeof AuthenticatedTasksCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/attachments/': {
      id: '/_authenticated/attachments/'
      path: '/attachments'
      fullPath: '/attachments'
      preLoaderRoute: typeof AuthenticatedAttachmentsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/documents/': {
      id: '/_authenticated/documents/'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof AuthenticatedDocumentsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/documents/$document-id/edit': {
      id: '/_authenticated/documents/$document-id/edit'
      path: '/documents/$document-id/edit'
      fullPath: '/documents/$document-id/edit'
      preLoaderRoute: typeof AuthenticatedDocumentsDocumentIdEditImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/$task-id/edit': {
      id: '/_authenticated/tasks/$task-id/edit'
      path: '/tasks/$task-id/edit'
      fullPath: '/tasks/$task-id/edit'
      preLoaderRoute: typeof AuthenticatedTasksTaskIdEditImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/documents/$document-id/': {
      id: '/_authenticated/documents/$document-id/'
      path: '/documents/$document-id'
      fullPath: '/documents/$document-id'
      preLoaderRoute: typeof AuthenticatedDocumentsDocumentIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/$task-id/': {
      id: '/_authenticated/tasks/$task-id/'
      path: '/tasks/$task-id'
      fullPath: '/tasks/$task-id'
      preLoaderRoute: typeof AuthenticatedTasksTaskIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAttachmentsSharedWithMeRoute: typeof AuthenticatedAttachmentsSharedWithMeRoute
  AuthenticatedDocumentsCreateRoute: typeof AuthenticatedDocumentsCreateRoute
  AuthenticatedTasksCreateRoute: typeof AuthenticatedTasksCreateRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedAttachmentsIndexRoute: typeof AuthenticatedAttachmentsIndexRoute
  AuthenticatedDocumentsIndexRoute: typeof AuthenticatedDocumentsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedDocumentsDocumentIdEditRoute: typeof AuthenticatedDocumentsDocumentIdEditRoute
  AuthenticatedTasksTaskIdEditRoute: typeof AuthenticatedTasksTaskIdEditRoute
  AuthenticatedDocumentsDocumentIdIndexRoute: typeof AuthenticatedDocumentsDocumentIdIndexRoute
  AuthenticatedTasksTaskIdIndexRoute: typeof AuthenticatedTasksTaskIdIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAttachmentsSharedWithMeRoute:
    AuthenticatedAttachmentsSharedWithMeRoute,
  AuthenticatedDocumentsCreateRoute: AuthenticatedDocumentsCreateRoute,
  AuthenticatedTasksCreateRoute: AuthenticatedTasksCreateRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedAttachmentsIndexRoute: AuthenticatedAttachmentsIndexRoute,
  AuthenticatedDocumentsIndexRoute: AuthenticatedDocumentsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedDocumentsDocumentIdEditRoute:
    AuthenticatedDocumentsDocumentIdEditRoute,
  AuthenticatedTasksTaskIdEditRoute: AuthenticatedTasksTaskIdEditRoute,
  AuthenticatedDocumentsDocumentIdIndexRoute:
    AuthenticatedDocumentsDocumentIdIndexRoute,
  AuthenticatedTasksTaskIdIndexRoute: AuthenticatedTasksTaskIdIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/sign-out': typeof authSignOutRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/attachments/shared-with-me': typeof AuthenticatedAttachmentsSharedWithMeRoute
  '/documents/create': typeof AuthenticatedDocumentsCreateRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/tasks/create': typeof AuthenticatedTasksCreateRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/attachments': typeof AuthenticatedAttachmentsIndexRoute
  '/documents': typeof AuthenticatedDocumentsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/documents/$document-id/edit': typeof AuthenticatedDocumentsDocumentIdEditRoute
  '/tasks/$task-id/edit': typeof AuthenticatedTasksTaskIdEditRoute
  '/documents/$document-id': typeof AuthenticatedDocumentsDocumentIdIndexRoute
  '/tasks/$task-id': typeof AuthenticatedTasksTaskIdIndexRoute
}

export interface FileRoutesByTo {
  '/sign-in': typeof authSignInRoute
  '/sign-out': typeof authSignOutRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/attachments/shared-with-me': typeof AuthenticatedAttachmentsSharedWithMeRoute
  '/documents/create': typeof AuthenticatedDocumentsCreateRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/tasks/create': typeof AuthenticatedTasksCreateRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/attachments': typeof AuthenticatedAttachmentsIndexRoute
  '/documents': typeof AuthenticatedDocumentsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/documents/$document-id/edit': typeof AuthenticatedDocumentsDocumentIdEditRoute
  '/tasks/$task-id/edit': typeof AuthenticatedTasksTaskIdEditRoute
  '/documents/$document-id': typeof AuthenticatedDocumentsDocumentIdIndexRoute
  '/tasks/$task-id': typeof AuthenticatedTasksTaskIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-out': typeof authSignOutRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/attachments/shared-with-me': typeof AuthenticatedAttachmentsSharedWithMeRoute
  '/_authenticated/documents/create': typeof AuthenticatedDocumentsCreateRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/tasks/create': typeof AuthenticatedTasksCreateRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/attachments/': typeof AuthenticatedAttachmentsIndexRoute
  '/_authenticated/documents/': typeof AuthenticatedDocumentsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/documents/$document-id/edit': typeof AuthenticatedDocumentsDocumentIdEditRoute
  '/_authenticated/tasks/$task-id/edit': typeof AuthenticatedTasksTaskIdEditRoute
  '/_authenticated/documents/$document-id/': typeof AuthenticatedDocumentsDocumentIdIndexRoute
  '/_authenticated/tasks/$task-id/': typeof AuthenticatedTasksTaskIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/sign-in'
    | '/sign-out'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/attachments/shared-with-me'
    | '/documents/create'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/notifications'
    | '/tasks/create'
    | '/apps'
    | '/attachments'
    | '/documents'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/documents/$document-id/edit'
    | '/tasks/$task-id/edit'
    | '/documents/$document-id'
    | '/tasks/$task-id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-out'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/attachments/shared-with-me'
    | '/documents/create'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/notifications'
    | '/tasks/create'
    | '/apps'
    | '/attachments'
    | '/documents'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/documents/$document-id/edit'
    | '/tasks/$task-id/edit'
    | '/documents/$document-id'
    | '/tasks/$task-id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/sign-in'
    | '/(auth)/sign-out'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/attachments/shared-with-me'
    | '/_authenticated/documents/create'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/tasks/create'
    | '/_authenticated/apps/'
    | '/_authenticated/attachments/'
    | '/_authenticated/documents/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/documents/$document-id/edit'
    | '/_authenticated/tasks/$task-id/edit'
    | '/_authenticated/documents/$document-id/'
    | '/_authenticated/tasks/$task-id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  authSignOutRoute: typeof authSignOutRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authSignInRoute: authSignInRoute,
  authSignOutRoute: authSignOutRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/sign-in",
        "/(auth)/sign-out",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/attachments/shared-with-me",
        "/_authenticated/documents/create",
        "/_authenticated/tasks/create",
        "/_authenticated/apps/",
        "/_authenticated/attachments/",
        "/_authenticated/documents/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/documents/$document-id/edit",
        "/_authenticated/tasks/$task-id/edit",
        "/_authenticated/documents/$document-id/",
        "/_authenticated/tasks/$task-id/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-out": {
      "filePath": "(auth)/sign-out.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/attachments/shared-with-me": {
      "filePath": "_authenticated/attachments/shared-with-me.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/create": {
      "filePath": "_authenticated/documents/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/create": {
      "filePath": "_authenticated/tasks/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/attachments/": {
      "filePath": "_authenticated/attachments/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/": {
      "filePath": "_authenticated/documents/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/$document-id/edit": {
      "filePath": "_authenticated/documents/$document-id/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/$task-id/edit": {
      "filePath": "_authenticated/tasks/$task-id/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/$document-id/": {
      "filePath": "_authenticated/documents/$document-id/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/$task-id/": {
      "filePath": "_authenticated/tasks/$task-id/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
